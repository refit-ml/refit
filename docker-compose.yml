version: '3.8'
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  refit-kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
      - '19092:19092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=EXTERNAL://0.0.0.0:19092,PLAINTEXT://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://refit-kafka:9092,EXTERNAL://127.0.0.1:19092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
  postgres:
    build: ./resources/pql
    ports:
      - "5432:5432"
    environment:
      - POSTGRESQL_PASSWORD=refit
      - POSTGRESQL_USERNAME=refit
      - POSTGRESQL_DATABASE=refit
    volumes:
      - postgres:/bitnami
  cassandra:
    build: ./resources/cql
    ports:
      - "7000:7000"
      - "9042:9042"
      - "9160:9160"
    volumes:
      - cassandra:/bitnami

  minio:
    image: minio/minio:RELEASE.2020-09-17T04-49-20Z
    volumes:
      - minio-1:/data
    ports:
      - "9000:9000"
    environment:
      MINIO_ACCESS_KEY: refit
      MINIO_SECRET_KEY: refit-key
    command: server /data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

#  job:
#    build: resources/job
#    environment:
#      MINIO_ACCESS_KEY: refit
#      MINIO_SECRET_KEY: refit-key
#      MINIO_HOST: http://minio:9000
#      MINIO_BUCKET: refit-jobs
#      SCRIPT_LOCATION: test-upload-folder/
#      SCRIPT_FILE: index.py


networks:
  default:
    driver: bridge

volumes:
  minio-1:
  cassandra:
  postgres: